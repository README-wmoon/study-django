REST
	Representational State Transfer = 모든 프로젝트에서 쓰인다 제일 중요함
	uri = member/mypage 보다는 member/1 회원의 번호를 쓰여서 그것을 대표한다.

	언제 어디서든 누구든 서버에 요청을 보낼 때
	URI만으로도 데이터 또는 행위(CRUD) 상태를 이해할 수 있도록 설계하는 규칙

	1. 소문자로 작성한다.
		대문자로 작성 시 문제가 발생할 수. 있기 때문에 소문자로 작성한다.

	2. 언더바 대신 하이픈을 사용한다.
		가독성을 높이기 위해서 하이픈으로 구분하는 것이 좋다.

	3. URI 마지막에 슬래시를 작성하지 않는다.
		마지막에 작성하는 슬래시는 의미가 없다.

	4. 계층 관계 표현 시 슬래시 구분자로 사용한다.
		계층 관계(포함 관계)에서는 슬래시로 구분해준다.

	5. 파일 확장자는 포함시키지 않는다.
		파일 확장자는 URI로 표현하지 않고 Header의 Content-Type을 사용하여
		body의 내용을 처리하도록 설계한다.

	6. 데이터를 대표할 때에는 명사를 사용하고, 상태를 대표할 때에는 동사를 사용한다.
		http://www.app.com/members/get/1 (x)
		http://www.app.com/members/delete/1 (o)
		무조건 한개여도 member 말고 members인 복수를 쓰쟈 
		상태면 가능하다. -> 데이터를 의미하지않고 상태가 된 delete기 때문에 가능하다.

	7. URI에 사용되는 영어 단어는 복수로 작성한다.

MSA (Micro Service Architecture) = 두개의 프로젝트인데 하나로 구현하는것

DRF(Django Rest Framework)


화면
	1. 고용 static 어디에 메인 app에 만든다.
	2. 여러 개의 HTML을 하나의 HTML로 어떻게 합치는가?